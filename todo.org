* useful links
[[https://blog.ghaiklor.com/how-to-implement-a-second-stage-boot-loader-80e75ae4270c][second stage bootloader tutorial]]
[[https://www.lurklurk.org/linkers/linkers.html][hows a linker work?]]
[[vga programming][http://www.brackeen.com/vga/]]
[[https://gcc.gnu.org/onlinedocs/gcc/Extended-Asm.html#InputOperands][gnu inline asm]]
[[http://www.imada.sdu.dk/Courses/DM18/Litteratur/IntelnATT.htm][asm syntax]]
[[https://www.tutorialspoint.com/assembly_programming/assembly_registers.htm][asm registers]]
[[http://wiki.osdev.org/Drawing_In_Protected_Mode][drawing in protected mode]]
[[http://webpages.charter.net/danrollins/techhelp/0089.HTM][graphics mode addresses]]
[[https://wiki.osdev.org/Rolling_Your_Own_Bootloader][oswiki: roll your own bootloader]]
[[https://wiki.osdev.org/GDT_Tutorial][GDT tutorial]]
[[https://wiki.osdev.org/A20_Linek][A20 line]]
[[https://en.wikipedia.org/wiki/BIOS_interrupt_call][BIOS interrupts]]
[[https://www.math.utah.edu/docs/info/ld_3.html#SEC8][ld docs]]
[[https://www.codeproject.com/articles/664165/writing-a-boot-loader-in-assembly-and-c-part][bootloader in c and asm]]
[[https://www.lurklurk.org/linkers/linkers.html#cfile][what does the c compiler do]]
[[http://www.asciitable.com/][ascii table]]
* TODO create c program that does the following
** DONE clear screen
** TODO draw text
   leaving this for protected mode, I'm nearly out of space in my C "bootloader"
** DONE draw line
